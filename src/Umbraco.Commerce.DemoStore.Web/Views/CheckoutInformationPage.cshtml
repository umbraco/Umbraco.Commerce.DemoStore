@using Umbraco.Commerce.Core.Api
@using Umbraco.Commerce.DemoStore
@using Umbraco.Commerce.DemoStore.Models;
@inject IUmbracoCommerceApi UmbracoCommerceApi
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<CheckoutInformationPage>
@{
    Layout = "CheckoutStepPage.cshtml";

    var store = Model.GetStore();
    var order = await Model.GetCurrentOrderAsync();
    var countries = await UmbracoCommerceApi.GetCountriesAsync(store!.Id);
    
    var checkoutPage = Model.GetCheckoutPage()!;
    var nextStep = Model.GetNextStep();
}

@section aside {
    <div class="pb-4 mb-4 border-b border-gray-300 ">
        @using (Html.BeginUmbracoForm("ApplyDiscountOrGiftCardCode", "CheckoutSurface", null, new { @class = "flex w-full m-0 frm-secondary" }))
        {
            <input type="text" name="code" placeholder="Discount / Gift Card Code" class="flex-1 py-2 px-4 border rounded placeholder-gray-700" />
            <button class="ml-4 bg-@(checkoutPage.PrimaryColor) text-white px-4 rounded hover:bg-gray-900" type="submit">Apply</button>
        }

        @Html.ValidationMessage("code", new { @class = "block text-red-900 bg-red-300 rounded p-2 mt-4" })

        @if (order.DiscountCodes.Count > 0 || order.GiftCards.Count > 0)
        {
            <ul class="mt-4 block">
                @foreach (var discountCode in order.DiscountCodes)
                {
                    <li class="inline-block mr-2"><a href="@Url.SurfaceAction("RemoveDiscountOrGiftCardCode",  "CheckoutSurface", new { Code = discountCode.Code })" class="inline-block bg-gray-300 px-2 rounded hover:bg-gray-900 hover:text-white"><i class="fa fa-times mr-1"></i> @discountCode.Code</a></li>
                }
                @foreach (var giftCard in order.GiftCards)
                {
                    <li class="inline-block mr-2"><a href="@Url.SurfaceAction("RemoveDiscountOrGiftCardCode",  "CheckoutSurface", new { Code = giftCard.Code })" class="inline-block bg-gray-300 px-2 rounded hover:bg-gray-900 hover:text-white"><i class="fa fa-times mr-1"></i> @giftCard.Code</a></li>
                }
            </ul>
        }
    </div>
}

@using (Html.BeginUmbracoForm("UpdateOrderInformation", "CheckoutSurface"))
{
    <input type="hidden" name="nextStep" value="@(nextStep?.Key)" />

    <h3 class="text-xl font-medium mb-4">Contact Information</h3>
    <input name="email" type="email" placeholder="Email" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
           value="@(order.CustomerInfo.Email)" required />
    <label class="flex items-center mb-2  cursor-pointer">
        <input name="marketingOptIn" type="checkbox" value="true" class="mr-2" @Html.Raw(order.Properties["marketingOptIn"] == "1" ? "checked=\"checked\"" : "") /> Keep me up to date on news and exclusive offers
    </label>

    <h3 class="text-xl font-medium mb-4 mt-8">Billing Address</h3>

    <div class="flex -mx-1">
        <input name="billingAddress.Firstname" type="text" placeholder="First name" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full"
               value="@(order.CustomerInfo.FirstName)" required />
        <input name="billingAddress.Lastname" type="text" placeholder="Last name" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full"
               value="@(order.CustomerInfo.LastName)" required />
    </div>

    <input name="billingAddress.Line1" type="text" placeholder="Address (line 1)" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
           value="@(order.Properties["billingAddressLine1"])" required />
    <input name="billingAddress.Line2" type="text" placeholder="Address (line 2)" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
           value="@(order.Properties["billingAddressLine2"])" />
    <input name="billingAddress.City" type="text" placeholder="City" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
           value="@(order.Properties["billingCity"])" required />

    <div class="flex -mx-1">
        <select name="billingAddress.Country" placeholder="Country" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full">
            @foreach (var country in countries)
            {
                <!option value="@(country.Id)" @Html.Raw(order.PaymentInfo.CountryId == country.Id ? "selected=\"selected\"" : "")>@(country.Name)</!option>
            }
        </select>
        <input name="billingAddress.ZipCode" type="text" placeholder="Postcode" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full"
               value="@(order.Properties["billingZipCode"])" required />
    </div>
    <input name="billingAddress.Telephone" type="text" placeholder="Phone" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
           value="@(order.Properties["billingTelephone"])" />

    <label class="flex items-center mb-2 cursor-pointer">
        <input name="shippingSameAsBilling" type="checkbox" class="mr-2" value="true" @Html.Raw(order.Properties["shippingSameAsBilling"] == "1" || !order.Properties.ContainsKey("shippingSameAsBilling") ? "checked=\"checked\"" : "") /> Shipping address is same as billing address
    </label>

    <div id="shipping-info" style="display: none;">

        <h3 class="text-xl font-medium mb-4 mt-8">Shipping Address</h3>

        <div class="flex -mx-1">
            <input name="shippingAddress.Firstname" type="text" placeholder="First name" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full"
                   value="@(order.Properties["shippingFirstName"])" />
            <input name="shippingAddress.Lastname" type="text" placeholder="Last name" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full"
                   value="@(order.Properties["shippingLastName"])" />
        </div>

        <input name="shippingAddress.Line1" type="text" placeholder="Address (line 1)" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
               value="@(order.Properties["shippingAddressLine1"])" />
        <input name="shippingAddress.Line2" type="text" placeholder="Address (line 2)" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
               value="@(order.Properties["shippingAddressLine2"])" />
        <input name="shippingAddress.City" type="text" placeholder="City" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
               value="@(order.Properties["shippingCity"])" />

        <div class="flex -mx-1">
            <select name="shippingAddress.Country" placeholder="Country" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full">
                @foreach (var country in countries)
                {
                    <!option value="@(country.Id)" @Html.Raw(order.ShippingInfo.CountryId == country.Id ? "selected=\"selected\"" : "")>@(country.Name)</!option>
                }
            </select>
            <input name="shippingAddress.ZipCode" type="text" placeholder="Postcode" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 mx-1 w-full"
                   value="@(order.Properties["shippingZipCode"])" />
        </div>
        <input name="shippingAddress.Telephone" type="text" placeholder="Phone" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full"
               value="@(order.Properties["shippingTelephone"])" />

    </div>

    <h3 class="text-xl font-medium mb-4 mt-8">Comments</h3>
    <textarea name="comments" placeholder="Enter any comments here" class="block placeholder-gray-700 border border-gray-300 rounded py-2 px-4 mb-2 w-full h-32">@(order.Properties["comments"])</textarea>

    @Html.Partial("CheckoutPrevNext")
}
