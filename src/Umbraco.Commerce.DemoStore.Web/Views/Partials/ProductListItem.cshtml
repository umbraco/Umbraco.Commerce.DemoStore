@using System.Linq;
@using Umbraco.Commerce.DemoStore;
@using Umbraco.Commerce.DemoStore.Models;
@using Umbraco.Commerce.Extensions;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<IProductPage>
@{
    var multiVariantProductPage = Model as MultiVariantProductPage;
    var primaryImage = Model.GetPrimaryImage();
}
<div class="px-3 mt-6 w-1/2 md:w-1/3">
    <a href="@Model.Url()" class="text-center hover:text-teal-400">
        <img src="@(primaryImage?.GetCropUrl(300, 300) ?? "https://placehold.it/300x300")" class="border" />
        <span class="block font-bold mt-4">@Model.Parent.Name - @Model.Name</span>
        <span class="block ">
            @if (multiVariantProductPage is { Variants.Count: > 0 })
            {
                // IMPORTANT! Depending on the number of variants you have, this could get very intensive
                // so you might want to find a better approach if this proves to be a problem

                var variantPrices = await multiVariantProductPage.Variants.SelectAsync(x => ((IProductComp)x.Content).CalculatePriceAsync(Model))
                    .OrderByAsync(x => x.WithoutTax)
                    .ToListAsync();
                var variantPricesAllSame = variantPrices.All(x => x.WithoutTax == variantPrices[0].WithoutTax);

                <text>@(!variantPricesAllSame ? "From " : "") @(await variantPrices.First().FormattedAsync())</text>
            }
            else
            {
                var childVariants = Model.Children<ProductVariant>()?.ToList();
                if (childVariants is { Count: > 0 })
                {
                    var variantPrices = await childVariants.SelectAsync(x => x.CalculatePriceAsync(Model))
                        .OrderByAsync(x => x.WithoutTax)
                        .ToListAsync();
                    var variantPricesAllSame = variantPrices.All(x => x.WithoutTax == variantPrices[0].WithoutTax);

                    <text>@(!variantPricesAllSame ? "From " : "") @(await variantPrices.First().FormattedAsync())</text>
                }
                else
                {
                    @(await Model.CalculatePriceAsync().FormattedAsync())
                }
            }
        </span>
    </a>
</div>
